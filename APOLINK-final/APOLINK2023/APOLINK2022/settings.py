"""
Django settings for APOLINK2022 project.

Generated by 'django-admin startproject' using Django 3.1.3.

For more information on this file, see
https://docs.djangoproject.com/en/3.1/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/3.1/ref/settings/
"""

from pathlib import Path
from django.utils.translation import gettext_lazy as _
from django.urls import reverse_lazy
import os

USE_DJANGO_JQUERY = True
AUTHENTICATION_BACKENDS = ['django.contrib.auth.backends.ModelBackend']

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent
#BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))

# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/3.1/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = '$corm0o3bu2f++q(yi3)s9r)+67o@x+jp3y*l0z$$at1byex18'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = [
    'localhost', '127.0.0.1', '.ngrok.io',
]


# Application definition

INSTALLED_APPS = [
    'modeltranslation',
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'Core',
    'Accounts',
    'Products',
    'captcha',
    'crispy_forms',
    'smart_selects',
    'jsonfield',
    'crispy_bootstrap4',
    'rosetta',
    #'parler',
    
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.locale.LocaleMiddleware', #for languages: this has to be between session middleware and common middleware
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
    
]

ROOT_URLCONF = 'APOLINK2022.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [os.path.join(BASE_DIR, 'Templates')],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]


WSGI_APPLICATION = 'APOLINK2022.wsgi.application'


# Database
# https://docs.djangoproject.com/en/3.1/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.sqlite3',
        'NAME': BASE_DIR / 'db.sqlite3',
    }
}


# Password validation
# https://docs.djangoproject.com/en/3.1/ref/settings/#auth-password-validators

PASSWORD_HASHERS = [
    'django.contrib.auth.hashers.Argon2PasswordHasher',
    'django.contrib.auth.hashers.BCryptSHA256PasswordHasher',
    'django.contrib.auth.hashers.BCryptPasswordHasher',
    'django.contrib.auth.hashers.PBKDF2PasswordHasher',
    'django.contrib.auth.hashers.PBKDF2SHA1PasswordHasher',
]

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/3.1/topics/i18n/
# https://docs.djangoproject.com/en/4.2/topics/i18n/translation/
#add the path to the .po files to make the translation
LOCALE_PATHS = [os.path.join(BASE_DIR, 'locale')]

LANGUAGE_CODE = 'en-us' #default language

LANGUAGES = (
    ('en', _('English')),
    ('el', _('Greek')),
)
#is not used , you have to read the documentation: are necessary to select the default languages
MODELTRANSLATION_FALLBACK_LANGUAGES = {
    'default': ('en',),
    'el': ('en',),
    'en': ('el',),
}

#if, instead of django modeltranslation library, you want to use PARLER (1 table for every translation)
'''
PARLER_LANGUAGES = {
    None: (
        {'code': 'en',}, # English
        {'code': 'el',}, # Greek
    ),
    'default': {
        'fallbacks': ['en'],
        'hide_untranslated': False,
    }
}
'''

TIME_ZONE = 'Europe/Athens'

USE_I18N = True

USE_L10N = True

USE_TZ = True

#URL 
BASE_URL = "http://127.0.0.1:8000"

# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/3.1/howto/static-files/
STATIC_URL = '/static/'
STATIC_DIR = os.path.join(BASE_DIR, 'static')
#is necessary to help django finding static files in every directory
STATICFILES_DIRS =[STATIC_DIR, os.path.join(BASE_DIR,'Core') , os.path.join(BASE_DIR, 'Accounts'), os.path.join(BASE_DIR, 'Products')]
STATIC_ROOT = os.path.join(BASE_DIR, 'staticfiles')
MEDIA_URL = '/media/' 
MEDIA_ROOT = os.path.join(BASE_DIR, 'media')
#login url when you use @login_required decorator
LOGIN_URL = reverse_lazy('Accounts:login')
#page to go after completion log-in with LoginView; in any languages, after login you are redirected to next_page=URL
LOGIN_REDIRECT_URL = reverse_lazy('Core:categories_list') #for languages

CRISPY_TEMPLATE_PACK = 'bootstrap4'
# Default primary key field type
# https://docs.djangoproject.com/en/4.1/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'

#SMTP - email configuaration
#for development: you can change it following the documentation at https://docs.djangoproject.com/en/4.2/topics/email/
EMAIL_BACKEND = 'django.core.mail.backends.smtp.EmailBackend' #SMTP = default email server
EMAIL_HOST = 'smtp.gmail.com' # server email provider; default : localhost; host to use for sending email
EMAIL_PORT = 587 #smtp port, don't touch this
EMAIL_FROM = 'ale2.brex99@gmail.com' # your server email (APOLINK_email)
EMAIL_USE_TLS = True
EMAIL_USE_SSL = False
EMAIL_HOST_USER = 'ale2.brex99@gmail.com' #your server email (APOLINK_email)
EMAIL_HOST_PASSWORD= 'qrldvykrmikkieyx' #password of the superuser: set it by google (if use gmail as host) passwords , put django application in
PASSWORD_RESET_TIMEOUT = 14400

#data upload : for images, documents etc. you can specify max sieze to upload on you server
DATA_UPLOAD_MAX_MEMORY_SIZE = 10485760 #10 * 1024 * 1024 (10 MB)

